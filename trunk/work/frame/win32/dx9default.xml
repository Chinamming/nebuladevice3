<?xml version="1.0" encoding="UTF-8"?>
<Nebula3 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../schemas/frame.xsd">

<!-- 
    Test frame shader for the Win32 platform.
    Renders a dedicated depth pass first, then renders the solid and alpha geometry to a (possibly
    multisampled) color buffer, and finally resolves the result through a post-effect into the backbuffer.
--> 
<FrameShader>
    
    <!-- declare render targets -->    
    
    <!--    NormalBuffer            |  A8  |  R8   |  G8  |  B8  |
                                    |   normal.x   |   normal.y  |    -->   
                    
    <DeclareRenderTarget name="NormalBuffer"            format="A8R8G8B8" depth="true" relWidth="0.75" relHeight="0.75" msaa="false"/>
    
    <!-- DSFObjectDepthBuffer       |    R8    |      G8       | B8  |  A8 | 
                                    | objectId | NormalGroupId |   depth   |   -->
                            
    <DeclareRenderTarget name="DSFObjectDepthBuffer"    format="A8R8G8B8" sharedDepthBuffer="NormalBuffer" relWidth="0.75" relHeight="0.75" msaa="false"/>                               
        
    <DeclareRenderTarget name="AlphaNormalDepthBuffer"  format="A8R8G8B8" sharedDepthBuffer="NormalBuffer" relWidth="0.75" relHeight="0.75" msaa="false"/>
    <DeclareRenderTarget name="AlphaDSFBuffer"          format="A8R8G8B8" sharedDepthBuffer="NormalBuffer" relWidth="0.75" relHeight="0.75" msaa="false"/>
        
    <DeclareRenderTarget name="LightBuffer"       format="A8R8G8B8" sharedDepthBuffer="NormalBuffer" relWidth="0.75" relHeight="0.75" msaa="false"/>
    <DeclareRenderTarget name="AlphaLightBuffer"  format="A8R8G8B8" sharedDepthBuffer="NormalBuffer" relWidth="0.75" relHeight="0.75" msaa="false"/>
    <DeclareRenderTarget name="ColorBuffer"       format="X8R8G8B8" depth="true"  relWidth="1.0" relHeight="1.0" msaa="true"/>    
    <DeclareRenderTarget name="SceneScaled"       format="X8R8G8B8" depth="false" relWidth="0.5" relHeight="0.5" msaa="false"/>
    <DeclareRenderTarget name="BrightPass"        format="X8R8G8B8" depth="false" relWidth="0.5" relHeight="0.5" msaa="false"/>
    <DeclareRenderTarget name="Bloom0"            format="X8R8G8B8" depth="false" relWidth="0.25" relHeight="0.25" msaa="false"/>
    <DeclareRenderTarget name="Bloom1"            format="X8R8G8B8" depth="false" relWidth="0.25" relHeight="0.25" msaa="false"/>
    <DeclareRenderTarget name="Gui"               format="A8R8G8B8" depth="false" relWidth="1.0" relHeight="1.0" msaa="false"/>
    
    <DeclareMRT name="GBuffer" >
        <RenderTarget name="NormalBuffer" clearColor="0.5,0.5,0.0,0.0" clearDepth="1.0" clearStencil="0"/>
        <RenderTarget name="DSFObjectDepthBuffer" clearColor="0.0,0.0,0.0,0.0"/>
    </DeclareMRT>
    
    <DeclareMRT name="AlphaGBuffer" >
        <RenderTarget name="AlphaNormalDepthBuffer" clearColor="0.5,0.5,0.0,0.0" clearDepth="1.0" clearStencil="0"/>
        <RenderTarget name="AlphaDSFBuffer" clearColor="0.0,0.0,0.0,0.0"/>
    </DeclareMRT>
        
    <!-- render the normal-depth pass -->
    <Pass name="NormalDepth" multipleRenderTarget="GBuffer" shader="p_depth">
        <Batch shader="b_empty" type="Solid" shdFeatures="NormalDepth"  nodeFilter="Solid"          sorting="None"        lighting="None"/>        
    </Pass>
               
    <!-- render the pre-light pass (assumes that a fullscreen global light is rendered first) -->
    <Pass name="Prelight" renderTarget="LightBuffer" shader="p_prelight" clearColor="0.0,0.0,0.0,0.0">
        <ApplyShaderVariable sem="NormalBuffer" value="NormalBuffer"/>                     
        <ApplyShaderVariable sem="DSFObjectDepthBuffer" value="DSFObjectDepthBuffer"/> 
        <Batch shader="b_empty" type="Lights"/>
    </Pass>
    
    <!-- render the normal-depth pass for alpha lighten objects -->
    <Pass name="NormalDepthAlpha" multipleRenderTarget="AlphaGBuffer" shader="p_depth">                
        <Batch shader="b_empty" type="Solid" shdFeatures="NormalDepth" nodeFilter="AlphaLit" sorting="None" lighting="None"/>
        <!-- <Batch shader="b_empty" type="Alpha" shdFeatures="NormalDepth" nodeFilter="ParticleLit" sorting="None" lighting="None"/> -->
    </Pass>
    
     <!-- render the pre-light pass (assumes that a fullscreen global light is rendered first) -->
    <Pass name="PrelightAlpha" renderTarget="AlphaLightBuffer" shader="p_prelight" clearColor="0.0,0.0,0.0,0.0">
        <ApplyShaderVariable sem="NormalBuffer" value="AlphaNormalDepthBuffer"/>                     
        <ApplyShaderVariable sem="DSFObjectDepthBuffer" value="AlphaDSFBuffer"/> 
        <Batch shader="b_empty" type="Lights"/>
    </Pass>
            
    <!-- render the world to the BackBuffer render target -->
    <Pass name="Color" renderTarget="ColorBuffer" shader="p_color" clearColor="0.0 0.0 0.0 1.0" clearDepth="1.0" clearStencil="0">    
        <ApplyShaderVariable sem="NormalBuffer" value="NormalBuffer"/>          
        <ApplyShaderVariable sem="LightBuffer" value="LightBuffer"/>                        
        <ApplyShaderVariable sem="DSFObjectDepthBuffer" value="DSFObjectDepthBuffer"/> 
        <ApplyShaderVariable sem="AlphaNormalDepthBuffer" value="AlphaNormalDepthBuffer"/>           
        <ApplyShaderVariable sem="AlphaLightBuffer"       value="AlphaLightBuffer"/>                        
        <ApplyShaderVariable sem="AlphaDSFObjectIdBuffer" value="AlphaDSFBuffer"/> 
        <Batch shader="b_solid"    type="Solid" shdFeatures="Solid"       nodeFilter="Solid"       sorting="None"        lighting="None"/>
        <Batch shader="b_solid"    type="Solid" shdFeatures="Solid"       nodeFilter="Background"  sorting="None"        lighting="None"/> 
        <Batch shader="b_solid"    type="Solid" shdFeatures="Solid"       nodeFilter="AlphaTest"   sorting="None"        lighting="None"/> 
        <Batch shader="b_alpha"    type="Solid" shdFeatures="AlphaLit"    nodeFilter="AlphaLit"    sorting="None"        lighting="None"/>        
        <Batch shader="b_alpha"    type="Alpha" shdFeatures="AlphaUnlit"  nodeFilter="ParticleLit" sorting="None"        lighting="None"/>        
        <Batch shader="b_alpha"    type="Alpha" shdFeatures="AlphaUnlit"  nodeFilter="Alpha"       sorting="BackToFront" lighting="None"/>  
        <Batch shader="b_additive" type="Alpha" shdFeatures="Additive"    nodeFilter="Additive"    sorting="BackToFront" lighting="None"/>         
    </Pass>
    
    <!-- create downscaled texture for bloom stuff -->    
    <PostEffect name="DownscaleScene" shader="pe_downsample2x2" renderTarget="SceneScaled">
        <ApplyShaderVariable sem="SourceBuffer" value="ColorBuffer"/>
    </PostEffect>
   
    <!-- invoke the bright pass filter -->    
    <PostEffect name="BrightPassFilter" shader="pe_brightpassfilter" renderTarget="BrightPass">
        <ApplyShaderVariable sem="SourceBuffer" value="SceneScaled"/>
    </PostEffect>    

    <!-- create bloom effect -->   
    <PostEffect name="BrightPassToBloomSource" shader="pe_gaussblur5x5" renderTarget="Bloom0">
        <ApplyShaderVariable sem="SourceBuffer" value="BrightPass"/>
    </PostEffect>
    <PostEffect name="Bloom1" shader="pe_gaussblur5x5" renderTarget="Bloom1">
        <ApplyShaderVariable sem="SourceBuffer" value="Bloom0"/>
    </PostEffect>
    <PostEffect name="Bloom2" shader="pe_bloomhori" renderTarget="Bloom0">
        <ApplyShaderVariable sem="SourceBuffer" value="Bloom1"/> 
    </PostEffect>
    <PostEffect name="Bloom3" shader="pe_bloomvert" renderTarget="Bloom1">
        <ApplyShaderVariable sem="SourceBuffer" value="Bloom0"/> 
    </PostEffect>
    <PostEffect name="Bloom4" shader="pe_bloomhori" renderTarget="Bloom0">
        <ApplyShaderVariable sem="SourceBuffer" value="Bloom1"/> 
    </PostEffect>
    <PostEffect name="Bloom5" shader="pe_bloomvert" renderTarget="Bloom1">
        <ApplyShaderVariable sem="SourceBuffer" value="Bloom0"/> 
    </PostEffect>    
  
    <!-- apply a post effect with color correction, renders directly to the presentation buffer -->
    <PostEffect name="Compose" shader="pe_compose">
        <ApplyShaderVariable sem="ColorBuffer" value="ColorBuffer"/>
        <ApplyShaderVariable sem="BloomBuffer" value="Bloom1"/>
        <ApplyShaderVariable sem="NormalBuffer" value="NormalBuffer"/>
        <ApplyShaderVariable sem="DSFObjectDepthBuffer" value="DSFObjectDepthBuffer"/>
        <ApplyShaderVariable sem="GuiBuffer" value="Gui"/>
        
        <!-- render debug stuff on top of complete frame -->        
        <Batch shader="b_shape" type="Shapes"/>
        <Batch shader="b_empty" type="Text"/>
        
        <!-- needed for N3 simple gui -->   
        <Batch shader="gui" type="UI"/>
 
    </PostEffect>
    
</FrameShader>
</Nebula3>
